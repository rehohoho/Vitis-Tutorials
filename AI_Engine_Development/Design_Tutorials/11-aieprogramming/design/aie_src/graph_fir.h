#ifndef __GRAPH_H__
#define __GRAPH_H__

#include <adf.h>
#include "fir.h"

#define SAMPLES  64  // use shorter for faster runtime
#define SHIFT    0   // to analyze output generated by impulses at input, use 15 for realistic input
#define ITER_CNT 1

std::vector<cint16> taps = std::vector<cint16>({
  {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, 
  {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, 
  {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, 
  {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}
});


class ScalarFirGraph : public adf::graph {

  private:
    adf::kernel fir;

  public:
    adf::input_plio plin1;
    adf::output_plio plout1;

    ScalarFirGraph() { 
      fir = adf::kernel::create_object<Scalar_32tap_fir<SAMPLES, SHIFT>>(taps);
      adf::source(fir) = "fir.cc";

#ifdef EXTERNAL_IO
      plin1 = adf::input_plio::create("sfir_plin1", adf::plio_64_bits);
      plout1 = adf::output_plio::create("sfir_plout1", adf::plio_64_bits);
#else
      plin1 = adf::input_plio::create("sfir_plin1", adf::plio_64_bits, "fir_10samples.txt");
      plout1 = adf::output_plio::create("sfir_plout1", adf::plio_64_bits, "scalar_fir.txt");
#endif
      
      adf::connect<adf::stream> n0 (plin1.out[0], fir.in[0]);
      adf::connect<adf::stream> n1 (fir.out[0], plout1.in[0]);
      
      adf::runtime<ratio>(fir) = 0.6;
    }

};


class VectorFirGraph : public adf::graph {

  private:
    adf::kernel fir;

  public:
    adf::input_plio plin1;
    adf::output_plio plout1;

    VectorFirGraph() { 
      fir = adf::kernel::create_object<Vector_32tap_fir<SAMPLES, SHIFT>>(taps);
      adf::source(fir) = "fir.cc";

#ifdef EXTERNAL_IO
      plin1 = adf::input_plio::create("vfir_plin1", adf::plio_64_bits);
      plout1 = adf::output_plio::create("vfir_plout1", adf::plio_64_bits);
#else
      plin1 = adf::input_plio::create("vfir_plin1", adf::plio_64_bits, "fir_10samples.txt");
      plout1 = adf::output_plio::create("vfir_plout1", adf::plio_64_bits, "vector_fir.txt");
#endif
      
      adf::connect<adf::stream> n0 (plin1.out[0], fir.in[0]);
      adf::connect<adf::stream> n1 (fir.out[0], plout1.in[0]);
      
      adf::runtime<ratio>(fir) = 0.6;
    }

};

#endif // __GRAPH_H__